# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: LiveCdnNodeView.proto, AuditAudienceMask.proto, ClientId.proto, ConfigSwitchType.proto, ConfigSwitchItem.proto, CSHeartbeat.proto, CSPing.proto, CSWebEnterRoom.proto, CSWebError.proto, CSWebHeartbeat.proto, CSWebUserExit.proto, WebUserPauseType.proto, CSWebUserPause.proto, PicUrl.proto, GzoneNameplate.proto, LiveFansGroupState.proto, LiveAudienceState.proto, PayloadType.proto, PSHostInfo.proto, SCEcho.proto, SCError.proto, SCHeartbeatAck.proto, SCInfo.proto, SCLiveWarningMaskStatusChangedAudience.proto, SCPingAck.proto, WebPauseType.proto, SCWebAuthorPause.proto, SCWebAuthorResume.proto, SCWebBetChanged.proto, SCWebBetClosed.proto, SimpleUserInfo.proto, WebRedPackCoverType.proto, WebRedPackInfo.proto, SCWebCurrentRedPackFeed.proto, SCWebEnterRoomAck.proto, SCWebError.proto, WebCommentFeedShowType.proto, WebCommentFeed.proto, WebComboCommentFeed.proto, WebLikeFeed.proto, WebLiveAssistantType.proto, WebGiftFeed.proto, WebSystemNoticeFeed.proto, WebShareFeed.proto, SCWebFeedPush.proto, SCWebGuessClosed.proto, SCWebGuessOpened.proto, SCWebHeartbeatAck.proto, SCWebLiveSpecialAccountConfigState.proto, WebWatchingUserInfo.proto, SCWebLiveWatchingUsers.proto, SCWebPipEnded.proto, SCWebPipStarted.proto, SCWebRefreshWallet.proto, SCWebRideChanged.proto, SCWebSuspectedViolation.proto, SocketMessage.proto, UserInfo.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class ClientId(betterproto.Enum):
    NONE = 0
    IPHONE = 1
    ANDROID = 2
    WEB = 3
    PC = 6
    IPHONE_LIVE_MATE = 8
    ANDROID_LIVE_MATE = 9


class ConfigSwitchType(betterproto.Enum):
    UNKNOWN = 0
    HIDE_BARRAGE = 1
    HIDE_SPECIAL_EFFECT = 2


class WebUserPauseType(betterproto.Enum):
    UNKNOWN_USER_PAUSE_TYPE = 0
    BACKGROUND = 1


class LiveAudienceStateAssistantType(betterproto.Enum):
    UNKNOWN_ASSISTANT_TYPE = 0
    SUPER = 1
    JUNIOR = 2


class PayloadType(betterproto.Enum):
    UNKNOWN_PAYLOAD_TYPE = 0
    CS_HEARTBEAT = 1
    CS_ERROR = 3
    CS_PING = 4
    PS_HOST_INFO = 51
    SC_HEARTBEAT_ACK = 101
    SC_ECHO = 102
    SC_ERROR = 103
    SC_PING_ACK = 104
    SC_INFO = 105
    CS_ENTER_ROOM = 200
    CS_USER_PAUSE = 201
    CS_USER_EXIT = 202
    CS_AUTHOR_PUSH_TRAFFIC_ZERO = 203
    CS_HORSE_RACING = 204
    CS_RACE_LOSE = 205
    CS_VOIP_SIGNAL = 206
    SC_ENTER_ROOM_ACK = 300
    SC_AUTHOR_PAUSE = 301
    SC_AUTHOR_RESUME = 302
    SC_AUTHOR_PUSH_TRAFFIC_ZERO = 303
    SC_AUTHOR_HEARTBEAT_MISS = 304
    SC_PIP_STARTED = 305
    SC_PIP_ENDED = 306
    SC_HORSE_RACING_ACK = 307
    SC_VOIP_SIGNAL = 308
    SC_FEED_PUSH = 310
    SC_ASSISTANT_STATUS = 311
    SC_REFRESH_WALLET = 312
    SC_LIVE_CHAT_CALL = 320
    SC_LIVE_CHAT_CALL_ACCEPTED = 321
    SC_LIVE_CHAT_CALL_REJECTED = 322
    SC_LIVE_CHAT_READY = 323
    SC_LIVE_CHAT_GUEST_END = 324
    SC_LIVE_CHAT_ENDED = 325
    SC_RENDERING_MAGIC_FACE_DISABLE = 326
    SC_RENDERING_MAGIC_FACE_ENABLE = 327
    SC_RED_PACK_FEED = 330
    SC_LIVE_WATCHING_LIST = 340
    SC_LIVE_QUIZ_QUESTION_ASKED = 350
    SC_LIVE_QUIZ_QUESTION_REVIEWED = 351
    SC_LIVE_QUIZ_SYNC = 352
    SC_LIVE_QUIZ_ENDED = 353
    SC_LIVE_QUIZ_WINNERS = 354
    SC_SUSPECTED_VIOLATION = 355
    SC_SHOP_OPENED = 360
    SC_SHOP_CLOSED = 361
    SC_GUESS_OPENED = 370
    SC_GUESS_CLOSED = 371
    SC_PK_INVITATION = 380
    SC_PK_STATISTIC = 381
    SC_RIDDLE_OPENED = 390
    SC_RIDDLE_CLOESED = 391
    SC_RIDE_CHANGED = 412
    SC_BET_CHANGED = 441
    SC_BET_CLOSED = 442
    SC_LIVE_SPECIAL_ACCOUNT_CONFIG_STATE = 645
    SC_LIVE_WARNING_MASK_STATUS_CHANGED_AUDIENCE = 758


class WebPauseType(betterproto.Enum):
    UNKNOWN_PAUSE_TYPE = 0
    TELEPHONE = 1
    SHARE = 2


class WebRedPackCoverType(betterproto.Enum):
    UNKNOWN_COVER_TYPE = 0
    NORMAL_COVER = 1
    PRETTY_COVER = 2


class WebCommentFeedShowType(betterproto.Enum):
    FEED_SHOW_UNKNOWN = 0
    FEED_SHOW_NORMAL = 1
    FEED_HIDDEN = 2


class WebLiveAssistantType(betterproto.Enum):
    UNKNOWN_ASSISTANT_TYPE = 0
    SUPER = 1
    JUNIOR = 2


class WebGiftFeedStyleType(betterproto.Enum):
    UNKNOWN_STYLE = 0
    BATCH_STAR_0 = 1
    BATCH_STAR_1 = 2
    BATCH_STAR_2 = 3
    BATCH_STAR_3 = 4
    BATCH_STAR_4 = 5
    BATCH_STAR_5 = 6
    BATCH_STAR_6 = 7


class WebSystemNoticeFeedDisplayType(betterproto.Enum):
    UNKNOWN_DISPLAY_TYPE = 0
    COMMENT = 1
    ALERT = 2
    TOAST = 3


class SocketMessageCompressionType(betterproto.Enum):
    UNKNOWN = 0
    NONE = 1
    GZIP = 2
    AES = 3


@dataclass
class CSError(betterproto.Message):
    code: int = betterproto.uint32_field(1)


@dataclass
class LiveCdnNodeView(betterproto.Message):
    cdn: str = betterproto.string_field(1)
    url: str = betterproto.string_field(2)
    free_traffic: bool = betterproto.bool_field(3)


@dataclass
class AuditAudienceMask(betterproto.Message):
    icon_cdn_node_view: List["LiveCdnNodeView"] = betterproto.message_field(1)
    title: str = betterproto.string_field(2)
    detail: str = betterproto.string_field(3)


@dataclass
class ConfigSwitchItem(betterproto.Message):
    config_switch_type: "ConfigSwitchType" = betterproto.enum_field(1)
    value: bool = betterproto.bool_field(2)


@dataclass
class CSHeartbeat(betterproto.Message):
    timestamp: int = betterproto.uint64_field(1)


@dataclass
class CSPing(betterproto.Message):
    echo_data: str = betterproto.string_field(1)
    client_id: "ClientId" = betterproto.enum_field(2)
    device_id: str = betterproto.string_field(3)
    app_ver: str = betterproto.string_field(4)


@dataclass
class CSWebEnterRoom(betterproto.Message):
    token: str = betterproto.string_field(1)
    live_stream_id: str = betterproto.string_field(2)
    reconnect_count: int = betterproto.uint32_field(3)
    last_error_code: int = betterproto.uint32_field(4)
    exp_tag: str = betterproto.string_field(5)
    attach: str = betterproto.string_field(6)
    page_id: str = betterproto.string_field(7)


@dataclass
class CSWebError(betterproto.Message):
    code: int = betterproto.uint32_field(1)
    msg: str = betterproto.string_field(2)


@dataclass
class CSWebHeartbeat(betterproto.Message):
    timestamp: int = betterproto.uint64_field(1)


@dataclass
class CSWebUserExit(betterproto.Message):
    time: int = betterproto.uint64_field(1)


@dataclass
class CSWebUserPause(betterproto.Message):
    time: int = betterproto.uint64_field(1)
    pause_type: "WebUserPauseType" = betterproto.enum_field(2)


@dataclass
class PicUrl(betterproto.Message):
    cdn: str = betterproto.string_field(1)
    url: str = betterproto.string_field(2)
    url_pattern: str = betterproto.string_field(3)
    ip: str = betterproto.string_field(4)


@dataclass
class GzoneNameplate(betterproto.Message):
    id: int = betterproto.int64_field(1)
    name: str = betterproto.string_field(2)
    urls: List["PicUrl"] = betterproto.message_field(3)


@dataclass
class LiveFansGroupState(betterproto.Message):
    intimacy_level: int = betterproto.uint32_field(1)
    enter_room_special_effect: int = betterproto.uint32_field(2)


@dataclass
class LiveAudienceState(betterproto.Message):
    is_from_fans_top: bool = betterproto.bool_field(1)
    is_koi: bool = betterproto.bool_field(2)
    assistant_type: "LiveAudienceStateAssistantType" = betterproto.enum_field(3)
    fans_group_intimacy_level: int = betterproto.uint32_field(4)
    nameplate: "GzoneNameplate" = betterproto.message_field(5)
    live_fans_group_state: "LiveFansGroupState" = betterproto.message_field(6)
    wealth_grade: int = betterproto.uint32_field(7)
    badge_key: str = betterproto.string_field(8)
    live_audience_state_11: List["LiveAudienceStateLiveAudienceState_11"] = (
        betterproto.message_field(11)
    )


@dataclass
class LiveAudienceStateLiveAudienceState_11(betterproto.Message):
    live_audience_state_11_1: (
        "LiveAudienceStateLiveAudienceState_11LiveAudienceState_11_1"
    ) = betterproto.message_field(1)


@dataclass
class LiveAudienceStateLiveAudienceState_11LiveAudienceState_11_1(betterproto.Message):
    # string s1 = 1;
    badge_icon: str = betterproto.string_field(2)
    # uint32 int3 = 3;
    badge_name: str = betterproto.string_field(4)


@dataclass
class PSHostInfo(betterproto.Message):
    ip: str = betterproto.string_field(1)
    port: int = betterproto.int32_field(2)


@dataclass
class SCEcho(betterproto.Message):
    content: str = betterproto.string_field(1)


@dataclass
class SCError(betterproto.Message):
    code: int = betterproto.uint32_field(1)
    msg: str = betterproto.string_field(2)
    sub_code: int = betterproto.uint32_field(3)


@dataclass
class SCHeartbeatAck(betterproto.Message):
    timestamp: int = betterproto.uint64_field(1)
    client_timestamp: int = betterproto.uint64_field(2)


@dataclass
class SCInfo(betterproto.Message):
    code: int = betterproto.uint32_field(1)
    msg: str = betterproto.string_field(2)


@dataclass
class SCLiveWarningMaskStatusChangedAudience(betterproto.Message):
    display_mask: bool = betterproto.bool_field(1)
    warning_mask: "AuditAudienceMask" = betterproto.message_field(2)


@dataclass
class SCPingAck(betterproto.Message):
    echo_data: str = betterproto.string_field(1)


@dataclass
class SCWebAuthorPause(betterproto.Message):
    time: int = betterproto.uint64_field(1)
    pause_type: "WebPauseType" = betterproto.enum_field(2)


@dataclass
class SCWebAuthorResume(betterproto.Message):
    time: int = betterproto.uint64_field(1)


@dataclass
class SCWebBetChanged(betterproto.Message):
    max_delay_millis: int = betterproto.uint64_field(1)


@dataclass
class SCWebBetClosed(betterproto.Message):
    max_delay_millis: int = betterproto.uint64_field(1)


@dataclass
class SimpleUserInfo(betterproto.Message):
    principal_id: str = betterproto.string_field(1)
    user_name: str = betterproto.string_field(2)
    head_url: str = betterproto.string_field(3)


@dataclass
class WebRedPackInfo(betterproto.Message):
    id: str = betterproto.string_field(1)
    author: "SimpleUserInfo" = betterproto.message_field(2)
    balance: int = betterproto.uint64_field(3)
    open_time: int = betterproto.uint64_field(4)
    current_time: int = betterproto.uint64_field(5)
    grab_token: str = betterproto.string_field(6)
    need_send_request: bool = betterproto.bool_field(7)
    request_delay_millis: int = betterproto.uint64_field(8)
    luckiest_delay_millis: int = betterproto.uint64_field(9)
    cover_type: "WebRedPackCoverType" = betterproto.enum_field(10)


@dataclass
class SCWebCurrentRedPackFeed(betterproto.Message):
    red_pack: List["WebRedPackInfo"] = betterproto.message_field(1)


@dataclass
class SCWebEnterRoomAck(betterproto.Message):
    min_reconnect_ms: int = betterproto.uint64_field(1)
    max_reconnect_ms: int = betterproto.uint64_field(2)
    heartbeat_interval_ms: int = betterproto.uint64_field(3)


@dataclass
class SCWebError(betterproto.Message):
    code: int = betterproto.uint32_field(1)
    msg: str = betterproto.string_field(2)
    sub_code: int = betterproto.uint32_field(3)


@dataclass
class WebCommentFeed(betterproto.Message):
    id: str = betterproto.string_field(1)
    user: "SimpleUserInfo" = betterproto.message_field(2)
    content: str = betterproto.string_field(3)
    device_hash: str = betterproto.string_field(4)
    sort_rank: int = betterproto.uint64_field(5)
    color: str = betterproto.string_field(6)
    show_type: "WebCommentFeedShowType" = betterproto.enum_field(7)
    sender_state: "LiveAudienceState" = betterproto.message_field(8)


@dataclass
class WebComboCommentFeed(betterproto.Message):
    id: str = betterproto.string_field(1)
    content: str = betterproto.string_field(2)
    combo_count: int = betterproto.uint32_field(3)


@dataclass
class WebLikeFeed(betterproto.Message):
    id: str = betterproto.string_field(1)
    user: "SimpleUserInfo" = betterproto.message_field(2)
    sort_rank: int = betterproto.uint64_field(3)
    device_hash: str = betterproto.string_field(4)
    live_audience_state: "LiveAudienceState" = betterproto.message_field(5)


@dataclass
class WebGiftFeed(betterproto.Message):
    id: str = betterproto.string_field(1)
    user: "SimpleUserInfo" = betterproto.message_field(2)
    time: int = betterproto.uint64_field(3)
    int_gift_id: int = betterproto.uint32_field(4)
    sort_rank: int = betterproto.uint64_field(5)
    merge_key: str = betterproto.string_field(6)
    batch_size: int = betterproto.uint32_field(7)
    combo_count: int = betterproto.uint32_field(8)
    rank: int = betterproto.uint32_field(9)
    expire_duration: int = betterproto.uint64_field(10)
    client_timestamp: int = betterproto.uint64_field(11)
    slot_display_duration: int = betterproto.uint64_field(12)
    star_level: int = betterproto.uint32_field(13)
    style_type: "WebGiftFeedStyleType" = betterproto.enum_field(14)
    live_assistant_type: "WebLiveAssistantType" = betterproto.enum_field(15)
    device_hash: str = betterproto.string_field(16)
    danmaku_display: bool = betterproto.bool_field(17)
    live_audience_state: "LiveAudienceState" = betterproto.message_field(18)


@dataclass
class WebSystemNoticeFeed(betterproto.Message):
    id: str = betterproto.string_field(1)
    user: "SimpleUserInfo" = betterproto.message_field(2)
    time: int = betterproto.uint64_field(3)
    content: str = betterproto.string_field(4)
    display_duration: int = betterproto.uint64_field(5)
    sort_rank: int = betterproto.uint64_field(6)
    display_type: "WebSystemNoticeFeedDisplayType" = betterproto.enum_field(7)


@dataclass
class WebShareFeed(betterproto.Message):
    id: str = betterproto.string_field(1)
    user: "SimpleUserInfo" = betterproto.message_field(2)
    time: int = betterproto.uint64_field(3)
    third_party_platform: int = betterproto.uint32_field(4)
    sort_rank: int = betterproto.uint64_field(5)
    live_assistant_type: "WebLiveAssistantType" = betterproto.enum_field(6)
    device_hash: str = betterproto.string_field(7)


@dataclass
class SCWebFeedPush(betterproto.Message):
    display_watching_count: str = betterproto.string_field(1)
    display_like_count: str = betterproto.string_field(2)
    pending_like_count: int = betterproto.uint64_field(3)
    push_interval: int = betterproto.uint64_field(4)
    comment_feeds: List["WebCommentFeed"] = betterproto.message_field(5)
    comment_cursor: str = betterproto.string_field(6)
    combo_comment_feed: List["WebComboCommentFeed"] = betterproto.message_field(7)
    like_feeds: List["WebLikeFeed"] = betterproto.message_field(8)
    gift_feeds: List["WebGiftFeed"] = betterproto.message_field(9)
    gift_cursor: str = betterproto.string_field(10)
    system_notice_feeds: List["WebSystemNoticeFeed"] = betterproto.message_field(11)
    share_feeds: List["WebShareFeed"] = betterproto.message_field(12)


@dataclass
class SCWebGuessClosed(betterproto.Message):
    time: int = betterproto.uint64_field(1)
    guess_id: str = betterproto.string_field(2)
    display_max_delay_millis: int = betterproto.uint64_field(3)


@dataclass
class SCWebGuessOpened(betterproto.Message):
    time: int = betterproto.uint64_field(1)
    guess_id: str = betterproto.string_field(2)
    submit_deadline: int = betterproto.uint64_field(3)
    display_max_delay_millis: int = betterproto.uint64_field(4)


@dataclass
class SCWebHeartbeatAck(betterproto.Message):
    timestamp: int = betterproto.uint64_field(1)
    client_timestamp: int = betterproto.uint64_field(2)


@dataclass
class SCWebLiveSpecialAccountConfigState(betterproto.Message):
    config_switch_item: List["ConfigSwitchItem"] = betterproto.message_field(1)
    timestamp: int = betterproto.uint64_field(2)


@dataclass
class WebWatchingUserInfo(betterproto.Message):
    user: "SimpleUserInfo" = betterproto.message_field(1)
    offline: bool = betterproto.bool_field(2)
    tuhao: bool = betterproto.bool_field(3)
    live_assistant_type: "WebLiveAssistantType" = betterproto.enum_field(4)
    display_ks_coin: str = betterproto.string_field(5)


@dataclass
class SCWebLiveWatchingUsers(betterproto.Message):
    watching_user: List["WebWatchingUserInfo"] = betterproto.message_field(1)
    display_watching_count: str = betterproto.string_field(2)
    pending_duration: int = betterproto.uint64_field(3)


@dataclass
class SCWebPipEnded(betterproto.Message):
    time: int = betterproto.uint64_field(1)


@dataclass
class SCWebPipStarted(betterproto.Message):
    time: int = betterproto.uint64_field(1)


@dataclass
class SCWebRefreshWallet(betterproto.Message):
    pass


@dataclass
class SCWebRideChanged(betterproto.Message):
    ride_id: str = betterproto.string_field(1)
    request_max_delay_millis: int = betterproto.uint32_field(2)


@dataclass
class SCWebSuspectedViolation(betterproto.Message):
    suspected_violation: bool = betterproto.bool_field(1)


@dataclass
class SocketMessage(betterproto.Message):
    payload_type: "PayloadType" = betterproto.enum_field(1)
    compression_type: "SocketMessageCompressionType" = betterproto.enum_field(2)
    payload: bytes = betterproto.bytes_field(3)


@dataclass
class UserInfo(betterproto.Message):
    user_id: int = betterproto.uint64_field(1)
    user_name: str = betterproto.string_field(2)
    user_gender: str = betterproto.string_field(3)
    user_text: str = betterproto.string_field(4)
    head_urls: List["PicUrl"] = betterproto.message_field(5)
    verified: bool = betterproto.bool_field(6)
    s_user_id: str = betterproto.string_field(7)
    https_head_urls: List["PicUrl"] = betterproto.message_field(8)
    kwai_id: str = betterproto.string_field(9)
